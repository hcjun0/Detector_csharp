□■▶▷▶■▶: 실행□▷◇◆◈◎○●진행 업무 (●:100%,◕:75%,◑:50%,◔25%)

<<< 2021-05-04 화요일 >>>
■ RabbitMQ서버 구축
■ Tray아이콘 형태로 Background처리 구현

<<< 2021-05-05 수요일 >>>
■ 메시지 송수시 기능구현 및 검증
□ 프로세스 CPU 점유율 표시

<<< 2021-05-06 목요일 >>>
■ 얼굴 인식 구현

<<< 2021-05-07 금요일 >>>
■ 배포서버 구축, ClickOnce 적용
■ 1초에 한번 사진 촬영하기, 320x240 ...CPU점유율 3.5% 

<<< 2021-05-08 토요일 >>>
■ Listview 추가
■ 다음 상황에서는 탐지하지 않게 한다.
  ▶ 절전 상태: HW적으로 동작이 중단됨.
  ▶ 윈도우즈 화면 잠금: OK
  ▷ 화면 보호기 실행중: 
■ FrameGraber 동작 수행
  ▶ 이전: Application.Idle += new EventHandler(FrameGrabber);
  ▶ 변경: BackgroundWorker bgwFrameGrab_DoWork()  
■ 시스템 정보 추가
  ▶ 복수개의 웹캠 감지
    
<<< 2021-05-09 일요일 >>>
■ 웹 어플리케이션 개발환경 셋업 및 Hello World테스트 완료
■ 노트북에 장착된 카메라가 없으면 에러 처리.

<<< 2021-05-11 화요일 >>>
■ Surface 전후방 카메라 구분해서, 사용자 바라보는 카메라로 영상처리 적용
  ▶ 2대의 전후방 카메라가 front, rear로 검색되고,
    LCD화면쪽을 바라보는 사용자를 보는 카메라는 rear로 구분됨.
  ▶ Surface 기기의 입장에서는 전방을 바라보니까 front,
    후방을 바라봐서 rear로 구분하는 듯함.
    
<<< 2021-05-13 목요일 >>>
■ DB로그기록: 사용자 로그인, 로그아웃, 인물2명이상 탐지

    #region GetDT_SP...Parameter List
        public DataTable GetDT_SP(string sp_name, ref string msg,
            List<MySqlParameter> paraList)
    
<<< 2021-05-13 목요일 >>>
■ CPU, 메모리 정보 추가

<<< 2021-05-14 금요일 >>>
■ 관리자 프로그램 프로토타입 구현
  ▶ DetectorAdmin 프로젝트 별도 생성
  ▶ 로그조회 화면 구현

<<< 2021-05-15 토요일 >>>
■ IronPython으로 C#에서 파이썬 실행하기

<<< 2021-05-17 월요일 >>>
■ [Detector] 이벤트 발생 시, 이미지파일을 DB에 저장한다.
■ [DetectorAdmin] 
  ▶ 관리자 프로그램에서는 이미지 조회하게 화면 구현한다.
  ▶ 관리자 프로그램 조회화면에서 특정 이벤트를 선택하면, 이미지를 픽처박스에 보여준다.      
  ▶ 관리자가 잘못 검출된 이미지인지 확인해서 진위여부를 지정하고, 잘못 탐지된 이벤트는 삭제한다.

<<< 2021-05-24 월요일 >>>
■ Python, Yolo v5 적용해서 pistol 찾기 적용

<<< 2021-05-24 월요일 >>>
■ Python, Yolo v5 detect.py
 ▶ 4,664 ms 소요
 ▷ detect안에 함수를 세분해서 소요시간을 측정
 ▷ 반복 실행 시, inference만을 수행해서 시간을 단축한다.

<<< 2021-06-01 화요일 >>>
■ 프로그램 시작 시, 경고 메시지 표시
■ Animation 아이콘 구현 in 시스템 트레이

<<< 2021-06-10 목요일 >>>
■ Python -> pypy 변환

<<< 2021-06-11 금요일 >>>
■ YOLO v4 in ML.Net 적용
■ EmguCV는 에러발생

□ 프로그램 설치 이후에는
  ▷ 프로그램 종료 차단
□ 프로그램 사용자 종료 시, 정책 마련
  ▷
□ 웹 어플리케이션 구현...Splunk에 로그 기록을 위해서 필요함.
□ PC 하드웨어 정보 수집
□ Git 학습

